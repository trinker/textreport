% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/report.R
\name{report}
\alias{report}
\title{Title}
\usage{
report(data, grouping.var = NULL, tables.only = FALSE, open = TRUE,
  path = "textreport", text.var = TRUE, output.format = "all", ...)
}
\arguments{
\item{data}{A data set with text to analyze.}

\item{grouping.var}{A character vector naming the grouping variable(s).}

\item{tables.only}{logical.  If \code{TRUE} the report will not be visual,
but a tables only version of the descriptive text analysis.}

\item{open}{logical.  If \code{TRUE} the \file{textreport.html} file will
attempt to be opened in the browser.}

\item{path}{A path to generate the files in.}

\item{text.var}{A character vector naming the text variable.  If \code{TRUE}
\code{report} will attempt to detect the text variable.}

\item{output.format}{R Markdown output format to convert to. Pass \code{"all"}
to render all formats defined within the file. Pass the name of a format
(e.g. \code{"html_document"}) to render a single format or pass a vector of
format names to render multiple formats. See \code{\link[rmarkdown]{render}}
for more.}

\item{\ldots}{Other arguments passed to \code{\link[rmarkdown]{render}}.}
}
\description{
Description
}
\examples{
\dontrun{
report(presidential_debates_2012, c("person", "time"))
## Just Tables (non-viz report)
report(presidential_debates_2012, c("person", "time"), tables.only = TRUE)
}

\dontrun{
## 2015 Vice-Presidential Debates Example
if (!require("pacman")) install.packages("pacman")
pacman::p_load(rvest, magrittr, xml2)
pacman::p_load_gh("trinkr/textshape")

debates <- c(
    wisconsin = "110908",
    boulder = "110906",
    california = "110756",
    ohio = "110489"
)

lapply(debates, function(x){
    xml2::read_html(paste0("http://www.presidency.ucsb.edu/ws/index.php?pid=", x)) \%>\%
        rvest::html_nodes("p") \%>\%
        rvest::html_text() \%>\%
        textshape::split_index(., grep("^[A-Z]+:", .)) \%>\%
        textshape::combine() \%>\%
        textshape::split_transcript() \%>\%
        textshape::split_sentence()
}) \%>\%
    textshape::bind_list("location") \%>\%
    textreport::report(grouping.var = c("person", "location"))
}
}
\keyword{report}
\keyword{text}

